# configuration approach followed:
# - whenever possible, prefer pyproject.toml
# - for configurations insufficiently supported by pyproject.toml, use setup.cfg instead
# - setup.py discouraged; minimal stub included only for compatibility with legacy tools

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "gene_benchmark"
description = "Gene embedding benchmarks"
authors = [{ name = "Yoav Kan-Tor", email = "yoav.kan-tor@ibm.com" },
{ name = "Eden Zohar", email = "Eden.Zohar@ibm.com" },
{ name = "Matan Ninio", email = "matann@il.ibm.com" },
{ name = "Michael Danziger", email = "Michael.Danziger@ibm.com" },
]
version = "0.0.1"
readme = "README.md"
# due to how PEP 440 defines version matching, prefer [incl, excl) definitions like below:
requires-python = ">=3.10, <3.13"
dependencies = [
"pandas>=2.1.3",
"mygene",
"biothings_client==0.3.1",
"sentence_transformers",
"scikit-learn",
"click",
"einops",
"tqdm",
]

[project.optional-dependencies]
task_scripts = ["pathvalidate"]
test = ["pytest", "pytest-cov"]

[project.urls]
repository = "https://github.ibm.com/BiomedSciAI/gene-benchmark"

[tool.setuptools.packages]
find = {}

[tool.ruff]
target-version = "py312"
extend-include = ["*.ipynb"]

# Activate all the rules that are pyupgrade-related
lint.select = [
  "UP",   # pyupgrade
  "D",    # pydocstyle
  "PT",   # pytest style checking
  "C4",   # comprehensions style checking
  "PD",   # pandas style checking
  "F",    # pyflakes: is-literal
  "W605", # pycodestyle: invalid-escape-sequence
  "I",    # isort
]
# On top of the Google convention, disable `D417`, which requires
# documentation for every function parameter.
lint.ignore = [
  "D100",  # pydocstyle: Missing module docstring
  "D101",  # pydocstyle: Missing module-level docstring
  "D102",  # pydocstyle: Missing docstring in public module
  "D103",  # pydocstyle: Missing class docstring
  "D105",  # pydocstyle: Missing docstring in magic method
  "D107",  # pydocstyle: Missing parameter descriptions in the docstring
  "D203",  # pydocstyle: 1 blank line required before class docstring
  "D205",  # pydocstyle: 1 blank line required between summary line and description
  "D212",  # pydocstyle: Multi-line docstring summary should start at the first line
  "D401",  # pydocstyle: First line should be in imperative mood
  "D417",  # pydocstyle: Missing argument descriptions in the docstring
  "PD011", # pandas do not use .values (false positives causing bugs in torch code)
  "PD015", # Use .merge method instead of pd.merge function. They have equivalent functionality.
]
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["I001"]
"tests/**/*.py" = ["D"]
"**/test_*.py" = ["D"]

[tool.coverage.report]

exclude_lines = ["pragma: no cover", "abc.abstractmethod", "@abstract"]

[tool.coverage.run]
omit = ["gene_benchmark/tests/*"]
